:::: hot ::::
https://codilime.com/harnessing-the-power-of-kubernetes-7-use-cases/

! cdn example setup
https://css-tricks.com/adding-a-cdn-to-your-website/

! howto storage in kubernetes:
https://kubernetes.io/docs/concepts/storage/volumes/

? are there tools/solutions for network monitoring & dynamic route management in kubernetes ?

! simulate slow nodes with this?
https://css-tricks.com/adding-a-cdn-to-your-website/

! tool for checking website access speed
.... use to evaluate effect of cdn.... speed up/slow downs?s
https://developers.google.com/speed/pagespeed/insights/

:::::::::::::

Build from source:
------------------

sudo docker build -t <name> <path-to-dockerfile>

Deploy manually:
----------------

(1-Install docker)

2-create new container from given image and start it::: 
	docker run --name mynode -dp 80:80 entty/cloud_project:v4

--- cleanup ---
docker rmi <image>
docker kill <container>
docker rm <container>

jump into container
------
docker exec -ti <container> /bin/bash
(alt: docker attach?)

in order to push to dockerhub, names must match. if image name has changesd, tag it dfirst

docker tag <oldname> <newname>
sudo docker push <tag>


Deploy by Kubernetes:
------------------

-install kubernetes
	- Win10: 
		install/open docker desktop 
		go to docker settings page
		select checkbox in Docker Desktop config page
	- ubuntu: apt-get install kubectl
	- debian(?) sudo snap install minikube
	
(-kubernetes tutorial/workshop:::	https://docs.docker.com/get-started/orchestration/)

- run "minikube start"
- run "kubectl apply -f <file.yaml>



----commmands list----
kubectl version

kubectl get <services|pods|??>

kubectl apply -f <filename.yaml>

kubectl logs cdn-demo

kubectl delete pod <name>
kubectl delete pod --all
  
  
  

------------------------------  

---?swarm?service?---

?docker swarm init
?docker swarm join demo

?docker service create --name demo alpine:3.5 ping 8.8.8.8
?docker service ps demo
?docker service logs demo
?docker service rm demo
?docker service create --name demo entty/cloud_project:v4
?docker service logs demo




	
